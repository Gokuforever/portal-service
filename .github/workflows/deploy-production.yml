name: Deploy to Production

on:
  workflow_dispatch:
  push:
    branches: [master]
  release:
    types: [published]

jobs:
  deploy:
    runs-on: self-hosted
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        server-id: github
        server-username: GITHUB_ACTOR
        server-password: GITHUB_PACKAGES_TOKEN
    
    - name: Build with Maven
      run: ./mvnw clean install -DskipTests
      env:
        GITHUB_PACKAGES_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/portal-service
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          latest
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    # Example deployment step - adjust as needed for your infrastructure
    - name: Deploy to Production Server
      run: |
        # Ensure config directory exists
        mkdir -p /home/ubuntu/studeaze/config
        # Pull latest image
        docker pull ghcr.io/${{ github.repository_owner }}/portal-service:latest
        # Deploy with docker-compose
        docker-compose -f ~/docker-compose.yml up -d portal-service 